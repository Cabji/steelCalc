#ifndef __SteelCalcOptions__
#define __SteelCalcOptions__

#include "CustomGridCellEditor.h"
#include "SteelCalcDatabaseViewer.h"

/**
@file
Subclass of Options, which is generated by wxFormBuilder.
*/

//// end generated include

// forward declare the SteelCalcMain class
class SteelCalcMain;

/** Implementing Options */
class SteelCalcOptions : public Options
{
	public:
		/** Constructor */
		SteelCalcOptions( wxWindow* parent );
	//// end generated class members

		bool 									GetAddLapTies();
		bool 									GetAddPerimeterTies();
		bool 									GetAddSetupTies();
		wxVector<std::pair<wxString, wxString>>	GetBarClassificationData();
		void 									SetAddLapTies(const bool& value);
		void 									SetAddPerimeterTies(const bool& value);
		void 									SetAddSetupTies(const bool& value);
		void 									SetBarClassificationData(const wxVector<std::pair<wxString, wxString>>& barData);
	private: 
		// Handlers for Options events.
		void 	OnGridKeyDown(wxKeyEvent& event);
		void	GridSort(wxGridEvent& event);
		void	OnClose(wxCloseEvent& event);
		void	OnShow(wxShowEvent& event);

		// private members
		wxVector<std::pair<wxString, wxString>>		m_barGradeAndCostData;
		SteelCalcMain*								m_mainFrame;
		std::string             					m_queryBarRates   = "SELECT itemName AS 'Bar Grade', itemCost AS 'Cost per Mg' FROM inventory "
																		"WHERE itemName LIKE '%C&B%' "
																		"OR itemName LIKE '%Complex Shape%' "
																		"OR itemName LIKE '%Fabrication%' "
																		"OR itemName LIKE '%Stock%'";
		std::vector<std::vector<std::pair<std::string, std::string>>>	m_resultSet;
};

#endif // __SteelCalcOptions__
