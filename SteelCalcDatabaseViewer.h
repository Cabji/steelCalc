#ifndef __SteelCalcDatabaseViewer__
#define __SteelCalcDatabaseViewer__

/**
@file
Subclass of DatabaseViewer, which is generated by wxFormBuilder.
*/

#include <vector>
#include <set>
#include <string>
#include "SteelCalcBase.h"
#include <SQLiteCpp/Database.h>
#include <SQLiteCpp/Statement.h>

//// end generated include

const struct ColumnSpec 
	{
		std::string name; // column name
		std::string type; // e.g. "INTEGER", "TEXT", "REAL"
	};

const struct TableSpec 
{
	std::vector<ColumnSpec> columns;
	// dev-note: the column's name is stored as the index in the DatabaseSchema std::map (declared below)
};

using DatabaseSchema = std::map<std::string, TableSpec>;

/** Implementing DatabaseViewer */
class SteelCalcDatabaseViewer : public DatabaseViewer
{
	const std::string	DEFAULT_DATABASE_FILENAME = "database.sq3";

	// expectedSchema defines the names and column properties for required tables in the sqlite3 database
	DatabaseSchema expectedSchema = {
        { "inventory", { { { "id", "INTEGER" }, { "name", "TEXT" }, { "quantity", "INTEGER" } } } },
        { "settings",  { { { "key", "TEXT" }, { "value", "TEXT" }, { "updated_at", "TEXT" } } } }
    };

	public:
		/** Constructor */
		SteelCalcDatabaseViewer( wxWindow* parent );
	//// end generated class members
	SteelCalcDatabaseViewer( wxWindow* parent, const std::string& dbFilename, const std::string& tableName);
	void								UpdateUI(const std::string& sectionName);
	std::vector<
		std::vector<
			std::pair<
				std::string, 
				std::string
			>
		>
	>									RequestDatabaseData(std::string query);
	void 								CheckAndCreateTables(SQLite::Database& dbConnection, std::set<std::string>& availableTableNames, const DatabaseSchema& expectedSchema);

	private: 
	std::set<std::string> 				DatabaseFetchTableNames(const SQLite::Database& dbConnection);
	void								OnDatabaseActiveTableChoiceChanged(wxEvent& event);

	std::string							m_dbActiveTableName;
	std::set<std::string>				m_dbAvailableTableNames;
	std::unique_ptr <SQLite::Database>	m_dbConnection;
	std::string							m_dbFilename;
	std::unique_ptr <SQLite::Statement>	m_dbQuery;
};

#endif // __SteelCalcDatabaseViewer__
